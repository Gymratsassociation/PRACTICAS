{"mappings":"AAAA,uBAAuB;AACvB,MAAM,UAAU;AAEhB,QAAQ,GAAG,CAAC,kBAAkB,GAAG,QAAQ,IAAI,CAAC,GAAG,wCAAwC;AAEzF,0CAA0C;AAC1C,eAAe;IACb,IAAI;QACF,QAAQ,GAAG,CAAC,oDAAoD,4BAA4B;QAC5F,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,IAAI,CAAC,GAAG,uCAAuC;QACvF,QAAQ,GAAG,CAAC,uBAAuB,WAAW,mCAAmC;QAEjF,IAAI,CAAC,SAAS,EAAE,EACd,MAAM,IAAI,MAAM;QAGlB,MAAM,QAAQ,MAAM,SAAS,IAAI;QACjC,QAAQ,GAAG,CAAC,uBAAuB,QAAQ,gCAAgC;QAC3E,YAAY;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B,QAAQ,iBAAiB;IACvE;AACF;AAEA,yDAAyD;AACzD,eAAe,SAAS,QAAQ,EAAE,QAAQ;IACxC,IAAI;QACF,QAAQ,GAAG,CAAC,CAAC,+BAA+B,EAAE,SAAS,aAAa,EAAE,UAAU,GAAG,sBAAsB;QACzG,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,KAAK,CAAC,EAAE;YAC9C,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAU;YAAS;QAC5C;QAEA,QAAQ,GAAG,CAAC,6CAA6C,WAAW,sBAAsB;QAE1F,IAAI,CAAC,SAAS,EAAE,EACd,MAAM,IAAI,MAAM;QAGlB,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,uBAAuB,OAAO,6BAA6B;QACvE,MAAM,CAAC,YAAY,EAAE,KAAK,MAAM,EAAE;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B,QAAQ,iBAAiB;IACrE;AACF;AAEA,gDAAgD;AAChD,SAAS,YAAY,KAAK;IACxB,QAAQ,GAAG,CAAC,6BAA6B,0BAA0B;IACnE,MAAM,WAAW,SAAS,cAAc,CAAC;IACzC,SAAS,SAAS,GAAG;IACrB,MAAM,OAAO,CAAC,CAAC;QACb,MAAM,KAAK,SAAS,aAAa,CAAC;QAClC,GAAG,WAAW,GAAG,GAAG,KAAK,MAAM,CAAC,EAAE,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC;QACjD,SAAS,WAAW,CAAC;IACvB;IACA,QAAQ,GAAG,CAAC,wCAAqC,4BAA4B;AAC/E;AAEA,mEAAmE;AACnE;AAEA,oDAAoD;AACpD,SAAS,cAAc,CAAC,oBAAoB,gBAAgB,CAAC,SAAS;IACpE,MAAM,WAAW,SAAS,cAAc,CAAC,kBAAkB,KAAK;IAChE,MAAM,WAAW,SAAS,cAAc,CAAC,kBAAkB,KAAK;IAChE,QAAQ,GAAG,CAAC,0CAAuC,+BAA+B;IAClF,SAAS,UAAU;AACrB","sources":["src/js/index.js"],"sourcesContent":["// URL base del backend\r\nconst API_URL = 'http://localhost:8080/api/users';\r\n\r\nconsole.log('URL de la API:', `${API_URL}/all`); // Verifica que la URL base sea correcta\r\n\r\n// Función para obtener todos los usuarios\r\nasync function fetchUsers() {\r\n  try {\r\n    console.log('Iniciando la solicitud para obtener usuarios...'); // Log antes de la solicitud\r\n    const response = await fetch(`${API_URL}/all`); // Ruta para obtener todos los usuarios\r\n    console.log('Respuesta recibida:', response); // Log de la respuesta del servidor\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Error al obtener los usuarios');\r\n    }\r\n\r\n    const users = await response.json();\r\n    console.log('Usuarios obtenidos:', users); // Log de los usuarios obtenidos\r\n    renderUsers(users);\r\n  } catch (error) {\r\n    console.error('Error al obtener usuarios:', error); // Log de errores\r\n  }\r\n}\r\n\r\n// Función para buscar un usuario por nombre y contraseña\r\nasync function findUser(username, password) {\r\n  try {\r\n    console.log(`Buscando usuario con username: ${username} y password: ${password}`); // Log de credenciales\r\n    const response = await fetch(`${API_URL}/find`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n\r\n    console.log('Respuesta del servidor al buscar usuario:', response); // Log de la respuesta\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Usuario no encontrado o credenciales incorrectas');\r\n    }\r\n\r\n    const user = await response.json();\r\n    console.log('Usuario encontrado:', user); // Log del usuario encontrado\r\n    alert(`Bienvenido, ${user.nombre}`);\r\n  } catch (error) {\r\n    console.error('Error al buscar usuario:', error); // Log de errores\r\n  }\r\n}\r\n\r\n// Función para renderizar usuarios en la página\r\nfunction renderUsers(users) {\r\n  console.log('Renderizando usuarios...'); // Log antes de renderizar\r\n  const userList = document.getElementById('user-list');\r\n  userList.innerHTML = '';\r\n  users.forEach((user) => {\r\n    const li = document.createElement('li');\r\n    li.textContent = `${user.nombre} (${user.email})`;\r\n    userList.appendChild(li);\r\n  });\r\n  console.log('Usuarios renderizados con éxito.'); // Log después de renderizar\r\n}\r\n\r\n// Llama a la función para obtener los usuarios al cargar la página\r\nfetchUsers();\r\n\r\n// Ejemplo de integración con botones en la interfaz\r\ndocument.getElementById('find-user-button').addEventListener('click', () => {\r\n  const username = document.getElementById('username-input').value;\r\n  const password = document.getElementById('password-input').value;\r\n  console.log('Botón de buscar usuario presionado'); // Log de interacción del botón\r\n  findUser(username, password);\r\n});\r\n"],"names":[],"version":3,"file":"index.de5c0784.js.map","sourceRoot":"/__parcel_source_root/"}